<?php

use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_theme_registry_alter().
 */
function commerce_admin_order_advanced_theme_registry_alter(&$theme_registry) {
  // Override the default template theme for admin orders.
  if (!empty($theme_registry['commerce_order__admin'])) {
    $theme_registry['commerce_order__admin']['path'] = drupal_get_path('module', 'commerce_admin_order_advanced') . '/templates';
    $theme_registry['commerce_order__admin']['template'] = 'commerce-order--admin';
  }
}

/**
 * Implements hook_ENTITY_TYPE_view_alter().
 */
function commerce_admin_order_advanced_commerce_order_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
  /** @var \Drupal\commerce_order\Entity\OrderInterface $entity */
  if ($display->getOriginalMode() == 'admin') {
    $serializer = \Drupal::getContainer()->get('serializer');
    $build['#attached']['drupalSettings']['order'] = $serializer->normalize($entity);
    $build['#attached']['drupalSettings']['orderItems'] = [];
    // @todo we need to add an Adjustment normalizer.
    foreach ($entity->getItems() as $order_item) {
      $build['#attached']['drupalSettings']['orderItems'][$order_item->uuid()] = $serializer->normalize($order_item);
    }
    if ($billing_profile = $entity->getBillingProfile()) {
      $build['#attached']['drupalSettings']['billingProfile'] = $serializer->normalize($billing_profile);
    }
  }
}
